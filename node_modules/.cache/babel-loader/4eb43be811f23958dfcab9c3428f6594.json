{"ast":null,"code":"class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(\"Error\");\n  }\n\n  changeLikeStatus(cardId, isLiked) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\n      headers: this._headers\n    }).then(res => this._checkResponse(res));\n  }\n\n  getInitialProfile() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers\n    }).then(res => this._checkResponse(res));\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers\n    }).then(res => this._checkResponse(res));\n  }\n\n  changeProfileImg(_ref) {\n    let {\n      avatar\n    } = _ref;\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  postCard(_ref2) {\n    let {\n      name,\n      link\n    } = _ref2;\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  patchProfileInfo(_ref3) {\n    let {\n      name,\n      about\n    } = _ref3;\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(res => this._checkResponse(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers\n    }).then(res => this._checkResponse(res));\n  }\n\n  likeCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this.headers\n    }).then(res => this._checkResponse(res));\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers\n    }).then(res => this._checkResponse(res));\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-11\",\n  headers: {\n    authorization: \"34a96d6c-47dd-42d3-b220-f7d1e2e3c502\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["C:/Users/סטודיול'ה צילום/Documents/GitHub/around-react/src/utils/api.js"],"names":["Api","constructor","options","baseUrl","headers","_checkResponse","res","ok","json","Promise","reject","changeLikeStatus","cardId","isLiked","fetch","_baseUrl","method","_headers","then","getInitialProfile","getInitialCards","changeProfileImg","avatar","body","JSON","stringify","postCard","name","link","patchProfileInfo","about","deleteCard","likeCard","removeLike","api","authorization"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACRC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,SAAKC,OAAL,GAAeD,OAAO,CAACC,OAAvB;AACA,SAAKC,OAAL,GAAeF,OAAO,CAACE,OAAvB;AACD;;AAEDC,EAAAA,cAAc,CAACC,GAAD,EAAM;AAClB,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,WAAOC,OAAO,CAACC,MAAR,CAAe,OAAf,CAAP;AACD;;AAEDC,EAAAA,gBAAgB,CAACC,MAAD,EAASC,OAAT,EAAkB;AAChC,WAAOC,KAAK,CAAE,GAAE,KAAKC,QAAS,gBAAeH,MAAO,EAAxC,EAA2C;AACrDI,MAAAA,MAAM,EAAG,GAAEH,OAAO,GAAG,KAAH,GAAW,QAAS,EADe;AAErDT,MAAAA,OAAO,EAAE,KAAKa;AAFuC,KAA3C,CAAL,CAGJC,IAHI,CAGEZ,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CAHV,CAAP;AAID;;AAEDa,EAAAA,iBAAiB,GAAG;AAClB,WAAOL,KAAK,CAAE,GAAE,KAAKX,OAAQ,WAAjB,EAA6B;AACvCC,MAAAA,OAAO,EAAE,KAAKA;AADyB,KAA7B,CAAL,CAEJc,IAFI,CAEEZ,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CAFV,CAAP;AAGD;;AAEDc,EAAAA,eAAe,GAAG;AAChB,WAAON,KAAK,CAAE,GAAE,KAAKX,OAAQ,QAAjB,EAA0B;AACpCC,MAAAA,OAAO,EAAE,KAAKA;AADsB,KAA1B,CAAL,CAEJc,IAFI,CAEEZ,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CAFV,CAAP;AAGD;;AAEDe,EAAAA,gBAAgB,OAAa;AAAA,QAAZ;AAAEC,MAAAA;AAAF,KAAY;AAC3B,WAAOR,KAAK,CAAE,GAAE,KAAKX,OAAQ,kBAAjB,EAAoC;AAC9Ca,MAAAA,MAAM,EAAE,OADsC;AAE9CZ,MAAAA,OAAO,EAAE,KAAKA,OAFgC;AAG9CmB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEH,QAAAA,MAAM,EAAEA;AAAV,OAAf;AAHwC,KAApC,CAAL,CAIJJ,IAJI,CAIEZ,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CAJV,CAAP;AAKD;;AAEDoB,EAAAA,QAAQ,QAAiB;AAAA,QAAhB;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAgB;AACvB,WAAOd,KAAK,CAAE,GAAE,KAAKX,OAAQ,QAAjB,EAA0B;AACpCa,MAAAA,MAAM,EAAE,MAD4B;AAEpCZ,MAAAA,OAAO,EAAE,KAAKA,OAFsB;AAGpCmB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEE,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAf;AAH8B,KAA1B,CAAL,CAIJV,IAJI,CAIEZ,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CAJV,CAAP;AAKD;;AAEDuB,EAAAA,gBAAgB,QAAkB;AAAA,QAAjB;AAAEF,MAAAA,IAAF;AAAQG,MAAAA;AAAR,KAAiB;AAChC,WAAOhB,KAAK,CAAE,GAAE,KAAKX,OAAQ,WAAjB,EAA6B;AACvCa,MAAAA,MAAM,EAAE,OAD+B;AAEvCZ,MAAAA,OAAO,EAAE,KAAKA,OAFyB;AAGvCmB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEE,QAAAA,IAAI,EAAEA,IAAR;AAAcG,QAAAA,KAAK,EAAEA;AAArB,OAAf;AAHiC,KAA7B,CAAL,CAIJZ,IAJI,CAIEZ,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CAJV,CAAP;AAKD;;AAEDyB,EAAAA,UAAU,CAACnB,MAAD,EAAS;AACjB,WAAOE,KAAK,CAAE,GAAE,KAAKX,OAAQ,UAASS,MAAO,EAAjC,EAAoC;AAC9CI,MAAAA,MAAM,EAAE,QADsC;AAE9CZ,MAAAA,OAAO,EAAE,KAAKA;AAFgC,KAApC,CAAL,CAGJc,IAHI,CAGEZ,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CAHV,CAAP;AAID;;AAED0B,EAAAA,QAAQ,CAACpB,MAAD,EAAS;AACf,WAAOE,KAAK,CAAE,GAAE,KAAKX,OAAQ,gBAAeS,MAAO,EAAvC,EAA0C;AACpDI,MAAAA,MAAM,EAAE,KAD4C;AAEpDZ,MAAAA,OAAO,EAAE,KAAKA;AAFsC,KAA1C,CAAL,CAGJc,IAHI,CAGEZ,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CAHV,CAAP;AAID;;AAED2B,EAAAA,UAAU,CAACrB,MAAD,EAAS;AACjB,WAAOE,KAAK,CAAE,GAAE,KAAKX,OAAQ,gBAAeS,MAAO,EAAvC,EAA0C;AACpDI,MAAAA,MAAM,EAAE,QAD4C;AAEpDZ,MAAAA,OAAO,EAAE,KAAKA;AAFsC,KAA1C,CAAL,CAGJc,IAHI,CAGEZ,GAAD,IAAS,KAAKD,cAAL,CAAoBC,GAApB,CAHV,CAAP;AAID;;AA3EO;;AA8EV,MAAM4B,GAAG,GAAG,IAAIlC,GAAJ,CAAQ;AAClBG,EAAAA,OAAO,EAAE,6CADS;AAElBC,EAAAA,OAAO,EAAE;AACP+B,IAAAA,aAAa,EAAE,sCADR;AAEP,oBAAgB;AAFT;AAFS,CAAR,CAAZ;AAQA,eAAeD,GAAf","sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this.baseUrl = options.baseUrl;\r\n    this.headers = options.headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(\"Error\");\r\n  }\r\n\r\n  changeLikeStatus(cardId, isLiked) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  getInitialProfile() {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      headers: this.headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      headers: this.headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  changeProfileImg({ avatar }) {\r\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({ avatar: avatar }),\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  postCard({ name, link }) {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({ name, link }),\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  patchProfileInfo({ name, about }) {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      body: JSON.stringify({ name: name, about: about }),\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this.headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  likeCard(cardId) {\r\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n      method: \"PUT\",\r\n      headers: this.headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  removeLike(cardId) {\r\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this.headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://around.nomoreparties.co/v1/group-11\",\r\n  headers: {\r\n    authorization: \"34a96d6c-47dd-42d3-b220-f7d1e2e3c502\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n"]},"metadata":{},"sourceType":"module"}